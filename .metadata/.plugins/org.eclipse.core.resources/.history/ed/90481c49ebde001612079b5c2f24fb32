package ffff;

import java.util.Scanner;

/*
 * 계(dog)산기
 * 
 * 키보드로부터 수식을 입력 받아 계산하라.
 * 
 * Ex 1) 2 + 3 + 4 + 5 - 3
 * Ex 2) 2 * 3 / 4 / 5 * 3 
 * 
 * 레벨 1) 산술연산자의 우선 순위는 동일하다는 Assumption
 * 수식의 유효성 검사
 *   - 산술 연자산자의 우선 순위는 동일
 *   - 수식의 유효성 -> 2 + + 4, 2 + 3 -
 *   - 음수 고려, 음수는 항상 괄호 표기
 *   
 *   
 *   3+(-2)-3
 * 계산 결과를 출력
 * 
 * 레벨 2) 산술연산자 우선순위 고려, 단 () 없음 -> Stack
 * 
 * 레벨 3) 산술연산자 + () 우선순위 고려
 *
*/
class Calculator {
	
	
	 String InputValue;
     
     int result;
	//수식입력
	Boolean FromKeyboard() {
	  
		
		Scanner scanner = new Scanner(System.in);
	    System.out.println("계산 식을 입력하시오.");
	    InputValue = scanner.nextLine();
	    InputValue=InputValue.replaceAll(" ", ""); 
		return true;
		
	}
	//유효성 검사
	Boolean isValid() {

		int temp1=0;
		int temp2=0;
		
		//**********************산술 연자산자의 우선 순위는 동일**********************
      if(InputValue.contains("+")){
    	  temp1=1;
    	  if(InputValue.contains("-")){
    		  temp1=2;	
    		  
    		  }	  
    	  else if(InputValue.contains("*"))  {
    		System.out.println("잘못했지롱");
    		  return false;
    	   }
    	  else if(InputValue.contains("/"))  {
    			System.out.println("잘못했지롱");
     		 return false;
     	 }
      }
      if(InputValue.contains("*")){
    	  temp2=1;
    	  if(InputValue.contains("/")){
    		  temp2=2;
    		  
    		  }	  
    	  else if(InputValue.contains("+"))  {
    			System.out.println("잘못했지롱");
    		  return false;
    	   }
    	  else if(InputValue.contains("-"))  {
    			System.out.println("잘못했지롱");
     		 return false;
     	 }
    	 //System.out.println(temp1); 
      }  
   //*********************************  수식의 유효성 *************************************
    //-> 2 + + 4, 2 + 3 -
     char last= (InputValue.charAt(InputValue.length()-1));
      
      if(temp1==1||temp1==2){
    	  if((InputValue.contains("++"))||(InputValue.contains("--"))||(InputValue.contains("+-"))
    		 ||(InputValue.contains("-+"))||(((last=='+')||(last=='-')))){
                System.out.println("잘못했다");
    		  return false;
    	        }	  
    	  }
      if(temp2==1||temp2==2){
    	  if((InputValue.contains("**"))||(InputValue.contains("//"))||(InputValue.contains("*/"))
    		 ||(InputValue.contains("/*"))||(((last=='*')||(last=='/')))){
                System.out.println("잘못했다");
    		  return false;
    	        }	  
    	  }      
  
      return true;
		 }

	//계산
	
	 Boolean calculation(){
		
		 InputValue=InputValue.replaceAll( "\\)","");
		 InputValue=InputValue.replaceAll( "[-]\\([+]","-");
		 InputValue=InputValue.replaceAll( "[-]\\([-]","+");
		 InputValue=InputValue.replaceAll( "\\(- ","-");
		 InputValue=InputValue.replaceAll( "\\([+]","");
		 InputValue=InputValue.replaceAll( "[+]\\([+]","");
		 InputValue=InputValue.replaceAll( "[+]\\([-]","-");
		 
	     //4+3-6+7-10
	
		 //15-14-4+2
	     int PMhap=0;
		 
		 if((InputValue.contains("+"))||(InputValue.contains("-"))){
		
			 InputValue = InputValue .replaceAll("[-]", "+-");
		     
		      String list[] = InputValue .split("[+]");
		      int list_jungsu[] = new int[list.length];
      
		      int result = 0;
		      
		      for(int i = 0; i < list.length; i++){
		         
		         if(list[i].charAt(0) == '-')
		            list_jungsu[i] = Integer.valueOf(list[i].substring(1, list[i].length()))*-1;
		         else
		            list_jungsu[i] = Integer.valueOf(list[i]);
		         
		         result += list_jungsu[i];
		            
		      }
		      System.out.println(result);      
		   
		 }
		 
		 
		/* if((InputValue.contains("*"))||(InputValue.contains("/"))){
			   String list2[] =InputValue.split("[*]"); 
			   int list2_int[]=new int[ list2.length ];
			   
			   for(int i=0 ; i<= list2.length ; i++){
			    	
			       if(list2[i].charAt(0)=='/'){
			    	  list2[i]=list2[i].replaceAll( "[/]","+-");
			    	  list2_int[i]=Integer.valueOf(list2[i])*(-1);
			    	  
			    	  gophap+=list2_int[i];
			    	  
			              }
			       
			       else{
			    	   list2_int[i]=Integer.valueOf(list2[i]);
			    	   nanugihap+=list2_int[i];
			             }
		             }
			     System.out.println(gophap+nanugihap);
			     
		 }
		 
	*/
		  return true;
	 }

}

public class exam1 {
  public static void main(String args[]){
	  
	  Calculator val = new Calculator();
	
	  
	  val.FromKeyboard();
	  val.isValid( );
	  val.calculation();
	  //val.print();
	  
	  
  }
}
